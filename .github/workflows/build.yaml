name: Build and publish

on:
  push:
    tags:
      - "*"

jobs:
  linux-build:
    name: Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Set up libraries
        run: |
          python -m pip install pyinstaller wheel
          python -m pip install -r requirements.txt

      - name: Build
        run: |
          pyinstaller -F deew.py --icon logo/icon.ico

      - name: Create release description
        run: |
          python -c "print('\n'.join(open('changelog.md', 'r').read().split('\n\n# deew')[0].split('\n')[1:]))" >> release_description.txt

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: release_description.txt
          draft: false
          prerelease: false

      - name: Upload release to GitHub
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/deew
          asset_name: deew_linux
          asset_content_type: application/zip

  windows-build:
    name: Windows
    runs-on: windows-latest
    needs: linux-build

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Set up libraries
        run: |
          python -m pip install pyinstaller wheel
          python -m pip install -r requirements.txt

      - name: Build
        run: |
          pyinstaller -F deew.py --icon logo/icon.ico

      - name: Get latest release info
        id: latest_release_info
        uses: jossef/action-latest-release-info@v1.1.0
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload release to GitHub
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: dist/deew.exe
          asset_name: deew.exe
          asset_content_type: application/zip
